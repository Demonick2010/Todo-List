@inject Todo_List.Data.Repository.IRepository repository;

@*Устанавливаем маршрут по адресу localhost/todo*@
@page "/todo"

<div class="container-fluid">
    <div class="row">
        <div class="col">

            <h2 class="text-center">Todo (@todos.Count(item => !item.IsDone))</h2>

            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Is Done</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                @foreach (var item in todos)
                {
                    <tbody>
                        <tr>
                            <td>
                                <div style="@(item.IsDone ? "color: green; text-decoration: line-through;" : "color: red;")">
                                    @item.Title
                                </div>
                            </td>
                            <td>
                                @if (!item.IsDone)
                                {
                                    <input type="checkbox" value="@item.IsDone" @onchange="(() => StatusChanged(item))" />
                                }
                                else
                                {
                                    <input type="checkbox" checked value="@item.IsDone" @onchange="(() => StatusChanged(item))" />
                                }
                            </td>
                            <td>
                                <button class="btn btn-danger" @onclick="(() => DeleteTodo(item.Id))">Delete</button>
                            </td>
                        </tr>
                    </tbody>
                }
            </table>

            <div class="row">
                <div class="col">
                    <input class="form-control" placeholder="Type something todo" @bind="newTodo" />
                </div>
                <div class="col">
                    <button class="btn btn-success" @onclick="AddTodo">Add todo</button>
                </div>
            </div>

        </div>
    </div>
</div>

@code {      

    private IEnumerable<TodoItem> todos = new List<TodoItem>();

    protected override void OnInitialized()
    {
        todos = repository.GetAllItems();
    }

    private string newTodo;

    // Добавляем обработчик нажатия кнопки добавления
    private void AddTodo()
    {
        if(!string.IsNullOrWhiteSpace(newTodo))
        {
            //todos.Add(new TodoItem {Title = newTodo});

            repository.AddTodo(newTodo);

            newTodo = string.Empty;
        }
    }

    private void DeleteTodo(int id)
    {
        //todos.Remove(deleteItem);
        repository.DeleteItem(id);
    }

    private void StatusChanged(TodoItem chengedItem)
    {
        chengedItem.IsDone = !chengedItem.IsDone;
        repository.ValueChenged(chengedItem);
    }
}
